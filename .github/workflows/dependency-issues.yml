name: Tick checkbox in mentioned PRs

on:
  pull_request:
    types: [closed]

jobs:
  tick-mentioned-prs:
    runs-on: ubuntu-latest
    if: github.event.pull_request.merged == true
    steps:
        - name: Tick checkbox in mentioned PRs
          uses: actions/github-script@v6
          with:
            script: |
                  // Retrieve timeline events
                  const {data: comments} = await github.rest.issues.listEventsForTimeline({
                      owner: context.repo.owner,
                      repo: context.repo.repo,
                      issue_number: context.payload.pull_request.number,
                  })

                  // Iterate over timeline events
                  comments.forEach(async (item) => {
                      // Ensure this is a reference to a pull request
                      if (item.event != "cross-referenced") {
                        return;
                      }
                      if (item.source.pull_request == null) {
                        return;
                      }

                      // Retrieving mentioned pull request's details
                      const repo = item.source.issue.repository.name
                      const owner = item.source.issue.repository.owner.login
                      const issue_number = item.source.issue.number

                      // Getting all comments from mentioned pull request
                      const {data: comments_to_edit} = await github.rest.issues.listComments({
                        owner: owner,
                        repo: repo,
                        issue_number: issue_number,
                      })

                      // Editing all comments from mentioned pull request that contains a link to the current pull request
                      comments_to_edit.forEach(async (item) => {
                        const urlPR = context.payload.pull_request.url;

                        // We edit only comments that contains a link to the current pull request
                        if (!item.body.includes(urlPR)) {
                          return;
                        }

                        let lines = item.body.split('\n');
                        let newContent = '';

                        for (let i = 0; i < lines.length; i++) {
                          if (lines[i].includes(urlPR)) {
                            // We tick the checkbox in the mentioned PR
                            lines[i] = lines[i].replace('[ ]', '[x]');
                          }
                          newContent += lines[i] + '\n';
                        }

                        // Update the comment
                        const {data: comments_to_edit} = await github.rest.issues.updateComment({
                          owner: owner,
                          repo: repo,
                          comment_id: item.id,
                          body: newContent
                        })
                      })
                  })
